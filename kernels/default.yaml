# Paths
root: /src # usual docker volume mount point for the repo
xdsl-opt: xdsl-opt # from virtualenv
mlir-opt: /usr/bin/mlir-opt-16
mlir-translate: /usr/bin/mlir-translate-16
cc: /opt/snitch-llvm/bin/riscv32-unknown-elf-clang
spike: /opt/snitch-spike/bin/spike-dasm
vltsim: /opt/snitch-rtl/bin/snitch_cluster.vlt
gentrace: /opt/snitch_cluster/util/trace/gen_trace.py

# Flags
asflags:
  - -menable-experimental-extensions
  - -mcpu=snitch
  - -mabi=ilp32d
  - -mcmodel=medany
  - -ftls-model=local-exec
  - -ffast-math
  - -fno-builtin-printf
  - -fno-common
  - -O3
  - -D__DEFINED_uint64_t
  - -I/opt/snitch_cluster/target/snitch_cluster/sw/runtime/rtl/src
  - -I/opt/snitch_cluster/target/snitch_cluster/sw/runtime/common
  - -I/opt/snitch_cluster/sw/snRuntime/api
  - -I/opt/snitch_cluster/sw/snRuntime/src
  - -I/opt/snitch_cluster/sw/snRuntime/src/omp/
  - -I/opt/snitch_cluster/sw/snRuntime/api/omp/
  - -I/opt/snitch_cluster/sw/math/arch/riscv64/bits/
  - -I/opt/snitch_cluster/sw/math/arch/generic
  - -I/opt/snitch_cluster/sw/math/src/include
  - -I/opt/snitch_cluster/sw/math/src/internal
  - -I/opt/snitch_cluster/sw/math/include/bits
  - -I/opt/snitch_cluster/sw/math/include
cflags:
  - -Wno-unused-command-line-argument
  - -menable-experimental-extensions
  - -mcpu=snitch
  - -mabi=ilp32d
  - -mcmodel=medany
  - -ftls-model=local-exec
  - -ffast-math
  - -fno-builtin-printf
  - -fno-common
  - -O3
  - -D__DEFINED_uint64_t
  - -I/opt/snitch_cluster/target/snitch_cluster/sw/runtime/rtl/src
  - -I/opt/snitch_cluster/target/snitch_cluster/sw/runtime/common
  - -I/opt/snitch_cluster/sw/snRuntime/api
  - -I/opt/snitch_cluster/sw/snRuntime/src
  - -I/opt/snitch_cluster/sw/snRuntime/src/omp/
  - -I/opt/snitch_cluster/sw/snRuntime/api/omp/
  - -I/opt/snitch_cluster/sw/math/arch/riscv64/bits/
  - -I/opt/snitch_cluster/sw/math/arch/generic
  - -I/opt/snitch_cluster/sw/math/src/include
  - -I/opt/snitch_cluster/sw/math/src/internal
  - -I/opt/snitch_cluster/sw/math/include/bits
  - -I/opt/snitch_cluster/sw/math/include
ldflags:
  - -fuse-ld=/opt/snitch-llvm/bin/ld.lld
  - -nostartfiles
  - -nostdlib
  - -lclang_rt.builtins-riscv32
  - -lc
  - -lsnRuntime
  - -L/opt/snitch-llvm/lib/clang/12.0.1/lib/
  - -T/opt/snitch_cluster/sw/snRuntime/base.ld
  - -L/opt/snitch_cluster/target/snitch_cluster/sw/runtime/rtl
  - -L/opt/snitch_cluster/target/snitch_cluster/sw/runtime/rtl/build
xdsl-passes:
  - convert-linalg-to-memref-stream
  - memref-stream-legalize
  # test-optimise-memref-stream
  - canonicalize
  - memref-stream-infer-fill
  - memref-stream-unnest-out-parameters
  - memref-stream-fold-fill
  - memref-stream-generalize-fill
  - memref-stream-interleave
  - memref-stream-tile-outer-loops{target-rank=4}
  - memref-streamify{streams=3}
  - convert-memref-stream-to-loops
  - canonicalize
  - scf-for-loop-flatten
  # test-lower-memref-stream-to-snitch-stream
  - canonicalize
  - convert-memref-to-riscv
  - lower-affine
  - convert-scf-to-riscv-scf
  - convert-arith-to-riscv
  - convert-func-to-riscv-func
  - convert-memref-stream-to-snitch-stream
  - reconcile-unrealized-casts
  # test-lower-snitch-stream-to-asm
  - canonicalize
  - convert-riscv-scf-for-to-frep
  - snitch-allocate-registers
  - convert-snitch-stream-to-snitch
  - lower-snitch
  - canonicalize
  - riscv-scf-loop-range-folding
  - canonicalize
  - riscv-allocate-registers
  - canonicalize
  - convert-riscv-scf-to-riscv-cf
  - canonicalize
xdsl-test-passes:
  - test-lower-linalg-to-snitch
mlir-opt-flags-linalg:
  - -opaque-pointers=0
  - --linalg-generalize-named-ops
  - --eliminate-empty-tensors
  - -empty-tensor-to-alloc-tensor
  - --one-shot-bufferize='bufferize-function-boundaries function-boundary-type-conversion=identity-layout-map'
  - --canonicalize
mlir-opt-flags-scf:
  - --convert-linalg-to-loops
  - --lower-affine
  - --canonicalize
  - --convert-scf-to-cf
  - --canonicalize
  - --cse
  - --convert-math-to-llvm
  - --convert-memref-to-llvm='use-generic-functions index-bitwidth=32'
  - --convert-func-to-llvm='use-bare-ptr-memref-call-conv index-bitwidth=32'
  - --convert-index-to-llvm=index-bitwidth=32
  - --convert-cf-to-llvm=index-bitwidth=32
  - --convert-arith-to-llvm=index-bitwidth=32
  - --reconcile-unrealized-casts
