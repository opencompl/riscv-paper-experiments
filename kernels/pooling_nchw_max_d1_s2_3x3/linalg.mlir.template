  func.func public @pooling_nchw_max_d1_s2_3x3(%X : tensor<1x1x{{(M - 1) * 1 + 3 + 1}}x{{(N - 1) * 1 + 3 + 1}}xf{{precision}}> {"llvm.noalias"}, %Y : tensor<1x1x{{M}}x{{N}}xf{{precision}}> {"llvm.noalias"}) -> tensor<1x1x{{M}}x{{N}}xf{{precision}}> {
    %min_val = arith.constant -10000.0 : f{{precision}}
    %zeros = linalg.fill ins(%min_val : f{{precision}}) outs(%Y : tensor<1x1x{{M}}x{{N}}xf{{precision}}>) -> tensor<1x1x{{M}}x{{N}}xf{{precision}}>
    %kernel = tensor.empty() : tensor<3x3xf{{precision}}>
    %res = linalg.pooling_nchw_max {"dilations" = dense<1> : vector<2xi64>, "strides" = dense<1> : vector<2xi64>} ins(%X, %kernel : tensor<1x1x{{(M - 1) * 1 + 3 + 1}}x{{(N - 1) * 1 + 3 + 1}}xf{{precision}}>, tensor<3x3xf{{precision}}>) outs(%zeros : tensor<1x1x{{M}}x{{N}}xf{{precision}}>) -> tensor<1x1x{{M}}x{{N}}xf{{precision}}>
    func.return %res : tensor<1x1x{{M}}x{{N}}xf{{precision}}>
  }
